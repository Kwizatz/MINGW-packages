_realname=gn
pkgbase=mingw-w64-${_realname}
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=1822
pkgrel=1
pkgdesc="GN is a meta-build system that generates build files for Ninja."
arch=('any')
url='https://gn.googlesource.com/gn/+/refs/heads/master/README.md'
license=('BSD')
makedepends=("${MINGW_PACKAGE_PREFIX}-python" "${MINGW_PACKAGE_PREFIX}-ninja" "git")
source=('gn::git+https://gn.googlesource.com/gn#tag=5da62d5e9d0f10cb8ece7c30563a6a214c78b68d' '0000-ninja-bug-workaround.patch')
sha256sums=('SKIP' 'b831576af25b275fca72851ec275c9d21bee0be29b4eb973a3e2a2580deac003')

prepare()
{
  cd gn
  git apply ${srcdir}/0000-ninja-bug-workaround.patch
  python build/gen.py --out-path=out/${CARCH} --platform=mingw
}

build()
{
  cd gn
  ninja -C out/${CARCH}
}

check()
{
  cd gn
  cp out/${CARCH}/gn_unittests.exe out/gn_unittests-${CARCH}.exe
  out/gn_unittests-${CARCH}.exe
}

package()
{
  cd gn
  install -d ${pkgdir}/${MINGW_PREFIX}/bin
  install -m755 -s out/${CARCH}/gn.exe ${pkgdir}/${MINGW_PREFIX}/bin
  install -d ${pkgdir}/${MINGW_PREFIX}/share/licenses/gn
  install -m644 LICENSE ${pkgdir}/${MINGW_PREFIX}/share/licenses/gn
}
